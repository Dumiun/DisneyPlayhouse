@page "/ManageMember"
@page "/ManageMember/ModifyMember/{MemberId}/{Option}"
@page "/ManageMember/AddNewMember/{MemberId}/{Option}"

@inject IStringLocalizer<Resource> localizer
@inject NavigationManager NavigationManager

<PageTitle>@localizer["ManageMember"]</PageTitle>

@attribute [Authorize(Roles = "Player,Master,Agent,Senior")]

<AuthorizeView>
    <MudGrid>
        <MudItem xs="3">
            <UserTree></UserTree>
        </MudItem>
        <MudItem xs="9">
            <ManageMemberSelectOptionsArea OnSubmitAddNewMember="HandleAddNewMember" OnSubmitModifyMember="HandleModifyMember" OnSubmitViewMembers="HandleViewAllMember"></ManageMemberSelectOptionsArea>
            @if (options == 1)
            {
                <AddNewMember RefreshComponent="HandleRefreshComponent" NewMemberForUser="@newUserFor"></AddNewMember>
            }
            @if (options == 2)
            {
                <ViewAllMembers></ViewAllMembers>
            }
            @if (options == 3)
            {
                <ModifyMember RefreshComponent="HandleRefreshComponent" ModifyUser="@newUserFor"></ModifyMember>
            }
        </MudItem>
    </MudGrid>
</AuthorizeView>


@code{
    private int options = 0;
    private string newUserFor = "";
    [Parameter]
    public string MemberId { get; set; }
    [Parameter]
    public string Option { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (!string.IsNullOrEmpty(MemberId))
        {
            newUserFor = MemberId;
        }
        if (!string.IsNullOrEmpty(Option))
        {
            options = Convert.ToInt32(Option);
        }
    }

    private async Task HandleAddNewMember()
    {
        newUserFor = "";
        options = 1;
    }

    private async Task HandleViewAllMember()
    {
        options = 2;
    }

    private async Task HandleModifyMember()
    {
        newUserFor = "";
        options = 3;
    }

    private async Task HandleRefreshComponent()
    {
        newUserFor = "";
        NavigationManager.NavigateTo("/ManageMember", true);
    }
}
@using DisneyPlayhouseLibrary.Models
@{
    var showClass = IsVisible ? "d-block" : "d-none";
}
<style>
    /* Custom CSS to adjust the width of the toast */
    .toast {
        width: 1000px;
    }
</style>

<div class="toast-container p-3 @showClass" data-bs-autohide="true" data-bs-delay="5000">
    <div class="toast show" role="alert" aria-live="assertive" aria-atomic="true">
        <div class="toast-header">
            <strong class="me-auto">@HeaderText</strong>
            <button type="button" class="btn-close" aria-label="Close" @onclick="Close"></button>
        </div>

        <div class="toast-body">
            @if (IsVisible)
            {
                <table class="table table-striped table-bordered text-center" style="font-size:smaller;">
                    <thead class="thead-dark table-dark">
                        <tr>
                            <th>Index</th>
                            <th>Draw Date</th>
                            <th>Number</th>
                            <th>Big</th>
                            <th>Small</th>
                        </tr>
                    </thead>
                    <tbody>
                        @for(int i = 0; i < NumbersList.Count; i++)
                        {
                            <tr>
                                <td class="fw-bolder">@(i+1)</td>
                                @if (NumbersList[i].DrawDate.DayOfWeek == DayOfWeek.Wednesday)
                                {
                                    <td class="fw-bolder text-success">@NumbersList[i].DrawDate.ToLongDateString()</td>
                                }
                                @if (NumbersList[i].DrawDate.DayOfWeek == DayOfWeek.Saturday)
                                {
                                    <td class="fw-bolder text-danger">@NumbersList[i].DrawDate.ToLongDateString()</td>
                                }
                                @if (NumbersList[i].DrawDate.DayOfWeek == DayOfWeek.Sunday)
                                {
                                    <td class="fw-bolder text-primary">@NumbersList[i].DrawDate.ToLongDateString()</td>
                                }
                                <td class="bg-success fw-bolder text-light bg-opacity-75">@NumbersList[i].NumberVariation</td>
                                <td>@NumbersList[i].Big</td>
                                <td>@NumbersList[i].Small</td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
        </div>
    </div>
</div>

@code {
    [Parameter]
    public bool IsVisible { get; set; }

    [Parameter]
    public EventCallback<bool> IsVisibleChanged { get; set; }

    [Parameter]
    public string? HeaderText { get; set; }


    [Parameter]
    public List<ILib_InvoiceLevel4DataModel> NumbersList { get; set; } = new List<ILib_InvoiceLevel4DataModel>();

    public void Show()
    {
        HeaderText = "Number Variation details";
        IsVisible = true;
        StateHasChanged();
    }

    private void Close()
    {
        HeaderText = string.Empty;
        IsVisible = false;
        StateHasChanged();
    }
}